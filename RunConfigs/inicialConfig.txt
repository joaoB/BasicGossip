# network size
SIZE 1000
HyParViewJoinTest.ACTIVE_VIEW_SIZE = 10
#Oracle.FANOUT 6

# parameters of periodic execution
CYCLES 300
CYCLE SIZE*10000

# parameters of message transfer
# delay values here are relative to cycle length, in percentage,
# eg 50 means half the cycle length, 200 twice the cycle length, etc.
MINDELAY 0
MAXDELAY 0
# drop is a probability, 0<=DROP<=1
DROP 0

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE

################### protocols ===========================

#protocol.link peersim.core.IdleProtocol
protocol.link basicGossip.protocols.Link

protocol.avg basicGossip.protocols.BasicGossip
protocol.avg.linkable link
protocol.avg.step CYCLE
protocol.avg.transport tr

protocol.view hyparview.HyParViewJoinTest
protocol.view.step CYCLE


protocol.urt UniformRandomTransport
protocol.urt.mindelay (CYCLE*MINDELAY)/100
protocol.urt.maxdelay (CYCLE*MAXDELAY)/100

protocol.tr UnreliableTransport
protocol.tr.transport urt
protocol.tr.drop DROP

network.node basicGossip.node.Usernode

################### initialization ======================

Oracle.FR_PERCENTAGE 0
Oracle.MAX_HOPS 12

#0 - do NOT send to freeriders
#1 - send to random 
Oracle.PEER_ALGORITHM 0

init.rndlink basicGossip.dynamics.MyWireKOut
init.rndlink.k 5000
init.rndlink.protocol link

init.vals ProtocolInitializer
#init.vals.protocol avg

#PROTOCOL ID
#1 - Altruistic
#2 - Max Hops
#3 - Model 3
#4 - three fase gossip
init.vals.PROTOCOL_ID 4

init.sch CDScheduler
init.sch.protocol avg
#init.sch.randstart



################ control ==============================

control.0 basicGossip.observers.MaxHopsObserver
#control.0.step CYCLE
control.0.step 99999999999999999
control.0.FINAL 1	

control.1 basicGossip.observers.TotalMessagesObserver
control.1.step 99999999999999999
control.1.FINAL 1

control.2 basicGossip.observers.PercentagesObserver
control.2.step 99999999999999999
control.2.FINAL 1

control.3 basicGossip.observers.AvgReliability
control.3.step 99999999999999999
control.3.FINAL 1